

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (1 June 2023 20:08:02) as /home/clinux01/Escritorio/cuis/CuisUniversity-5832.image!


----End fileIn of /home/clinux01/Escritorio/2023-1c/08-MarsRover-ElRegreso/MarsRover-WithHeading.st----!

TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LogTest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:26:06'!
TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LogTest methodsFor: 'no messages' stamp: 'AlYac 6/1/2023 20:29:15'!
test01StartingMarsRoverHasEmptyLog

	self assert: MarsRover ! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:30:29' prior: 50624867!
test01StartingMarsRoverHasEmptyLog

	self assert: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth) log isEmpty! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:31:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:32:16'!
log
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:32:46' prior: 50624882!
log
	
	^ OrderedCollection new! !

----STARTUP---- (1 June 2023 20:34:18) as /home/clinux01/Escritorio/cuis/CuisUniversity-5832.image!


!classDefinition: #MarsRoverTest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverTest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:21:23'!
test01DoesNotMoveWhenNoCommand

	self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: '' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:12'!
test02IsAtFailsForDifferentPosition

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@2 heading: self north)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:31'!
test03IsAtFailsForDifferentHeading

	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	
	self deny: (marsRover isAt: 1@1 heading: self south)! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:30:17'!
test04IncrementsYAfterMovingForwardWhenHeadingNorth

	self 
		assertIsAt: 1@3 
		heading: self north 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:30:11'!
test06DecrementsYAfterMovingBackwardsWhenHeadingNorth

	self 
		assertIsAt: 1@1 
		heading: self north 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:59'!
test07PointToEashAfterRotatingRightWhenHeadingNorth

	self 
		assertIsAt: 1@2 
		heading: self east 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:51'!
test08PointsToWestAfterRotatingLeftWhenPointingNorth

	self 
		assertIsAt: 1@2 
		heading: self west 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:45'!
test09DoesNotProcessInvalidCommand

	| marsRover |
	
	marsRover := MarsRover at: 1@2 heading: self north.
	
	self 
		should: [ marsRover process: 'x' ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: anError messageText equals: marsRover invalidCommandErrorDescription.
			self assert: (marsRover isAt: 1@2 heading: self north) ]! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:39'!
test10CanProcessMoreThanOneCommand

	self 
		assertIsAt: 1@4 
		heading: self north 
		afterProcessing: 'ff' 
		whenStartingAt: 1@2 
		heading: self north 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:31'!
test11IncrementsXAfterMovingForwareWhenHeadingEast

	self 
		assertIsAt: 2@2 
		heading: self east 
		afterProcessing: 'f' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:19'!
test12DecrementsXAfterMovingBackwardWhenHeadingEast

	self 
		assertIsAt: 0@2 
		heading: self east 
		afterProcessing: 'b' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:14'!
test13PointsToSouthAfterRotatingRightWhenHeadingEast

		self 
		assertIsAt: 1@2 
		heading: self south 
		afterProcessing: 'r' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:05'!
test14PointsToNorthAfterRotatingLeftWhenPointingEast

		self 
		assertIsAt: 1@2 
		heading: self north 
		afterProcessing: 'l' 
		whenStartingAt: 1@2 
		heading: self east 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:29:00'!
test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth

	self 
		assertIsAt: 1@1 
		heading: self west 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self south 
! !
!MarsRoverTest methodsFor: 'tests' stamp: 'HAW 10/7/2021 20:28:52'!
test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest

	self 
		assertIsAt: 0@2 
		heading: self north 
		afterProcessing: 'ffblrr' 
		whenStartingAt: 1@2 
		heading: self west 
! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:31'!
east

	^ MarsRoverHeadingEast ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:38'!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:45'!
south

	^ MarsRoverHeadingSouth ! !
!MarsRoverTest methodsFor: 'headings' stamp: 'HAW 10/7/2021 20:09:54'!
west

	^ MarsRoverHeadingWest ! !
!MarsRoverTest methodsFor: 'assertions' stamp: 'HAW 10/7/2021 20:20:47'!
assertIsAt: newPosition heading: newHeadingType afterProcessing: commands whenStartingAt: startPosition heading: startHeadingType

	| marsRover |
	
	marsRover := MarsRover at: startPosition heading: startHeadingType. 
	
	marsRover process: commands.
	
	self assert: (marsRover isAt: newPosition heading: newHeadingType)! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'exceptions' stamp: 'HAW 6/30/2018 19:48:45'!
invalidCommandErrorDescription
	
	^'Invalid command'! !
!MarsRover methodsFor: 'exceptions' stamp: 'HAW 6/30/2018 19:50:26'!
signalInvalidCommand
	
	self error: self invalidCommandErrorDescription ! !
!MarsRover methodsFor: 'initialization' stamp: 'HAW 10/7/2021 20:10:49'!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:02'!
headEast
	
	head := MarsRoverHeadingEast for: self! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:12'!
headNorth
	
	head := MarsRoverHeadingNorth for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:17'!
headSouth
	
	head := MarsRoverHeadingSouth for: self! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:17:24'!
headWest
	
	head := MarsRoverHeadingWest for: self ! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20'!
rotateLeft
	
	head rotateLeft! !
!MarsRover methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44'!
rotateRight
	
	head rotateRight! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 10/7/2021 20:16:32'!
isAt: aPosition heading: aHeadingType

	^position = aPosition and: [ head isHeading: aHeadingType ]! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:16:51'!
isBackwardCommand: aCommand

	^aCommand = $b! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:16:19'!
isForwardCommand: aCommand

	^aCommand = $f ! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:17:51'!
isRotateLeftCommand: aCommand

	^aCommand = $l! !
!MarsRover methodsFor: 'testing' stamp: 'HAW 7/6/2018 18:17:21'!
isRotateRightCommand: aCommand

	^aCommand = $r! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24'!
moveBackward
	
	head moveBackward! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:15:01'!
moveEast
	
	position := position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53'!
moveForward
	
	head moveForward! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:13:12'!
moveNorth
	
	position := position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:13:34'!
moveSouth
	
	position := position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'HAW 8/22/2019 12:15:32'!
moveWest
	
	position := position + (-1@0)! !
!MarsRover methodsFor: 'command processing' stamp: 'HAW 6/30/2018 19:48:26'!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand ]
! !
!MarsRover methodsFor: 'command processing' stamp: 'HAW 8/22/2019 12:08:50'!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !

!classDefinition: 'MarsRover class' category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRover class
	instanceVariableNames: 'headings'!

!classDefinition: 'MarsRover class' category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRover class
	instanceVariableNames: 'headings'!
!MarsRover class methodsFor: 'instance creation' stamp: 'HAW 10/7/2021 20:10:30'!
at: aPosition heading: aHeadingType
	
	^self new initializeAt: aPosition heading: aHeadingType! !

!classDefinition: #MarsRoverHeading category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeading category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeading methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20'!
rotateLeft

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44'!
rotateRight

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'testing' stamp: 'HAW 10/7/2021 20:15:38'!
isHeading: aHeadingType

	^self isKindOf: aHeadingType ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24'!
moveBackward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53'!
moveForward

	self subclassResponsibility ! !
!MarsRoverHeading methodsFor: 'initialization' stamp: 'HAW 10/7/2021 20:11:59'!
initializeFor: aMarsRover 
	
	marsRover := aMarsRover.! !

!classDefinition: 'MarsRoverHeading class' category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading class
	instanceVariableNames: ''!

!classDefinition: 'MarsRoverHeading class' category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading class
	instanceVariableNames: ''!
!MarsRoverHeading class methodsFor: 'instance creation' stamp: 'HAW 10/7/2021 20:11:35'!
for: aMarsRover 
	
	^self new initializeFor: aMarsRover ! !

!classDefinition: #MarsRoverHeadingEast category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingEast category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50625229!
moveBackward
	
	^marsRover moveWest! !
!MarsRoverHeadingEast methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50625233!
moveForward
	
	^marsRover moveEast! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50625216!
rotateLeft
	
	^marsRover headNorth! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50625220!
rotateRight
	
	^marsRover headSouth! !

!classDefinition: #MarsRoverHeadingNorth category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingNorth category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50625229!
moveBackward
	
	^marsRover moveSouth! !
!MarsRoverHeadingNorth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50625233!
moveForward
	
	^marsRover moveNorth! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50625216!
rotateLeft
	
	^marsRover headWest! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50625220!
rotateRight
	
	^marsRover headEast! !

!classDefinition: #MarsRoverHeadingSouth category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingSouth category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50625229!
moveBackward
	
	^marsRover moveNorth! !
!MarsRoverHeadingSouth methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50625233!
moveForward
	
	^marsRover moveSouth! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50625216!
rotateLeft
	
	^marsRover headEast! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50625220!
rotateRight
	
	^marsRover headWest! !

!classDefinition: #MarsRoverHeadingWest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingWest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:24' overrides: 50625229!
moveBackward

	^marsRover moveEast! !
!MarsRoverHeadingWest methodsFor: 'moving' stamp: 'HAW 10/7/2021 20:13:53' overrides: 50625233!
moveForward
	
	^marsRover moveWest! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:20' overrides: 50625216!
rotateLeft
	
	^marsRover headSouth! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'HAW 10/7/2021 20:14:44' overrides: 50625220!
rotateRight
	
	^marsRover headNorth! !

!classDefinition: #LogTest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LogTest category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 20:34:33'!
TestCase subclass: #LogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LogTest methodsFor: 'no messages' stamp: 'AlYac 6/1/2023 20:29:15'!
test01StartingMarsRoverHasEmptyLog

	self assert: MarsRover ! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:30:29' prior: 50625417!
test01StartingMarsRoverHasEmptyLog

	self assert: (MarsRover at: 1@1 heading: MarsRoverHeadingNorth) log isEmpty! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:32:16'!
log
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:32:46' prior: 50625429!
log
	
	^ OrderedCollection new! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:35:57' prior: 50625422!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	self assert: mr log isEmpty! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:35:59'!
PASSED!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:35:59'!
PASSED!
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:44:49' prior: 50625438!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr log isEmpty! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:44:51'!
PASSED!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:44:51'!
PASSED!
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:46:07' prior: 50625452!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:46:26' prior: 50625466!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil.! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:46:28'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'AlYac 6/1/2023 20:47:04'!
window
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'logging' stamp: 'AlYac 6/1/2023 20:47:18' prior: 50625484!
window
	
	^nil! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:47:19'!
PASSED!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:47:19'!
PASSED!
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:47:31'!
test02StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil.! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:46:07' prior: 50625474!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:47:53' prior: 50625506!
test01StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr log isEmpty.! !
!LogTest methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 20:48:12'!
test02StartingMarsRoverHasNilWindow
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil.! !

!methodRemoval: LogTest #test02StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:48:14'!
test02StartingMarsRoverHasEmptyLog
	
	|mr |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	mr process: ''.
	self assert: mr window isNil.!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 20:48:28'!
PASSED!

!testRun: #LogTest #test02StartingMarsRoverHasNilWindow stamp: 'AlYac 6/1/2023 20:48:30'!
PASSED!

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 21:33:18'!
Object subclass: #PositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LogTest methodsFor: 'tests' stamp: 'AlYac 6/1/2023 21:33:13' prior: 50625514!
test01StartingMarsRoverHasEmptyLog
	
	|mr positionLogger|
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	positionLogger := PositionLogger new.
	mr addPositionLogger: positionLogger.
	
	mr process: ''.
	self assert: positionLogger log isEmpty.! !

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 21:34:52'!
Object subclass: #PositionWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LogTest methodsFor: 'tests' stamp: 'AlYac 6/1/2023 21:34:48' prior: 50625522!
test02StartingMarsRoverHasNilWindow
	
	|mr positionWindow |
	mr := MarsRover at: 1@1 heading: MarsRoverHeadingNorth.
	positionWindow := PositionWindow new.
	mr addPositionWindow: positionWindow.
	
	mr process: ''.
	self assert: positionWindow window equals: 'nada'.! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:34:55'!
ERROR!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:34:55'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 21:35:02'!
addPositionLogger: positionLogger 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 21:35:35'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'AlYac 6/1/2023 21:35:33' prior: 50625587!
addPositionLogger: positionLogger 
	
	loggers add: positionLogger! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:35:38'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'AlYac 6/1/2023 21:36:14' prior: 50625089!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	loggers := OrderedCollection new.! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:36:22'!
ERROR!

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:36:22'!
ERROR!
!PositionLogger methodsFor: 'category-name' stamp: 'AlYac 6/1/2023 21:36:33'!
log
	self shouldBeImplemented.! !

!classDefinition: #PositionLogger category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 21:37:02'!
Object subclass: #PositionLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionLogger methodsFor: 'category-name' stamp: 'AlYac 6/1/2023 21:36:57' prior: 50625621!
log
	
	^log! !
!PositionLogger methodsFor: 'nil' stamp: 'AlYac 6/1/2023 21:37:33' overrides: 16920235!
initialize

	log := OrderedCollection new.! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:38:48'!
PASSED!

!testRun: #LogTest #test02StartingMarsRoverHasNilWindow stamp: 'AlYac 6/1/2023 21:38:52'!
ERROR!

!testRun: #LogTest #test02StartingMarsRoverHasNilWindow stamp: 'AlYac 6/1/2023 21:38:52'!
ERROR!
!MarsRover methodsFor: 'logging' stamp: 'AlYac 6/1/2023 21:39:35'!
addPositionWindow: positionWindow 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'logging' stamp: 'AlYac 6/1/2023 21:40:02' prior: 50625650!
addPositionWindow: positionWindow 
	
	loggers add: positionWindow! !

!testRun: #LogTest #test02StartingMarsRoverHasNilWindow stamp: 'AlYac 6/1/2023 21:40:04'!
ERROR!
!PositionWindow methodsFor: 'initialization' stamp: 'AlYac 6/1/2023 21:41:00'!
window
	self shouldBeImplemented.! !

!classDefinition: #PositionWindow category: 'MarsRover-WithHeading' stamp: 'AlYac 6/1/2023 21:41:20'!
Object subclass: #PositionWindow
	instanceVariableNames: 'window'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!PositionWindow methodsFor: 'initialization' stamp: 'AlYac 6/1/2023 21:41:19' prior: 50625663!
window
	
	^window.! !
!PositionWindow methodsFor: 'initialization' stamp: 'AlYac 6/1/2023 21:41:54' overrides: 16920235!
initialize

	window := ''.! !
!PositionWindow methodsFor: 'initialization' stamp: 'AlYac 6/1/2023 21:42:08' prior: 50625679 overrides: 16920235!
initialize

	window := 'nada'.! !

!testRun: #LogTest #test01StartingMarsRoverHasEmptyLog stamp: 'AlYac 6/1/2023 21:42:40'!
PASSED!

!testRun: #LogTest #test02StartingMarsRoverHasNilWindow stamp: 'AlYac 6/1/2023 21:42:40'!
PASSED!

----SNAPSHOT----(1 June 2023 21:54:40) CuisUniversity-5832.image priorSource: 9366758!